{"version":3,"sources":["components/Thumbnail/Thumbnail.jsx","components/Container/Container.jsx","components/Modal/Modal.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Thumbnail","react_default","a","createElement","className","this","props","bootstrap","id","src","imageSrc","alt","onClick","incrementScore","bind","Component","Container","children","ModalCom","react","Fade_default","clear","Modal","isOpen","modal","ModalHeader","ModalBody","score","topScore","ModalFooter","Button","color","closeModal","React","Footer","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","openModal","randomizeOrder","array","sort","Math","random","updateTopScore","currentScore","state","prevState","resetScore","map","char","picked","assign","compareScore","find","hash","_this2","components_Container_Container","character","components_Thumbnail_Thumbnail","key","Modal_Modal","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5af4a244.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Proptypes from \"prop-types\";\n\nclass Thumbnail extends Component {\n  render() {\n    return (\n      <div className={this.props.bootstrap}>\n        <button>\n          <img\n            id={this.props.id}\n            src={this.props.imageSrc}\n            alt={this.props.alt}\n            onClick={this.props.incrementScore.bind(this, this.props.id)}\n          />\n        </button>\n      </div>\n    );\n  }\n}\n\nThumbnail.propTypes = {\n  id: Proptypes.string.isRequired,\n  imageSrc: Proptypes.string.isRequired,\n  alt: Proptypes.string.isRequired,\n  incrementScore: Proptypes.func\n};\n\nexport default Thumbnail;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Container extends Component {\n  render() {\n    return <main className={this.props.bootstrap}>{this.props.children}</main>;\n  }\n}\n\nContainer.propTypes = {\n  bootstrap: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired\n};\n\nexport default Container;\n","import React, { Fragment } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Fade from \"react-reveal/Fade\";\nimport Proptypes from \"prop-types\";\n\nclass ModalCom extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <Fade clear>\n          <Modal isOpen={this.props.modal} className={this.props.className}>\n            <ModalHeader className=\"mx-auto\">\n              <h1>Game Over</h1>\n            </ModalHeader>\n            <ModalBody className=\"mx-auto\">\n              <h2>\n                Your Score: {this.props.score} <span>|</span> Top Score:{\" \"}\n                {this.props.topScore}\n              </h2>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color=\"primary\"\n                onClick={this.props.closeModal}\n                className=\"mx-auto\"\n              >\n                Restart\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </Fade>\n      </Fragment>\n    );\n  }\n}\n\nModalCom.propTypes = {\n  modal: Proptypes.bool.isRequired,\n  score: Proptypes.number.isRequired,\n  topScore: Proptypes.number.isRequired,\n  closeModal: Proptypes.func.isRequired\n};\n\nexport default ModalCom;\n","import React, { Fragment } from \"react\";\n\nconst Footer = () => {\n  return (\n    <Fragment>\n      <footer>\n        <h4 className=\"pl-5 pb-3 text-warning\">\n          Designed by Tarek El-Hajjaoui\n        </h4>\n      </footer>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Thumbnail from \"./components/Thumbnail/index.js\";\nimport Container from \"./components/Container/index.js\";\nimport ModalCom from \"./components/Modal/index.js\";\nimport Footer from \"./components/Footer/index.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      topScore: 0,\n      modal: false,\n      array: [\n        {\n          hash: \"images/Homer.png\",\n          id: \"Homer\",\n          picked: false\n        },\n        {\n          hash: \"images/Marge.png\",\n          id: \"Marge\",\n          picked: false\n        },\n        {\n          hash: \"images/Lisa.png\",\n          id: \"Lisa\",\n          picked: false\n        },\n        {\n          hash: \"images/Bart.png\",\n          id: \"Bart\",\n          picked: false\n        },\n        {\n          hash: \"images/Grandpa.png\",\n          id: \"Grandpa\",\n          picked: false\n        },\n        {\n          hash: \"images/Barney.png\",\n          id: \"Barney\",\n          picked: false\n        },\n        {\n          hash: \"images/Mo.png\",\n          id: \"Mo\",\n          picked: false\n        },\n        {\n          hash: \"images/Krusty.png\",\n          id: \"Krusty\",\n          picked: false\n        },\n        {\n          hash: \"images/Ned.png\",\n          id: \"Ned\",\n          picked: false\n        },\n        {\n          hash: \"images/Edna.png\",\n          id: \"Edna\",\n          picked: false\n        },\n        {\n          hash: \"images/Skinner.png\",\n          id: \"Skinner\",\n          picked: false\n        },\n        {\n          hash: \"images/Waylon.png\",\n          id: \"Waylon\",\n          picked: false\n        },\n        {\n          hash: \"images/Apu.png\",\n          id: \"Abu\",\n          picked: false\n        },\n        {\n          hash: \"images/Milhouse.png\",\n          id: \"Milhouse\",\n          picked: false\n        },\n        {\n          hash: \"images/Burns.png\",\n          id: \"Burns\",\n          picked: false\n        }\n      ]\n    };\n  }\n\n  closeModal = () => {\n    this.setState({\n      modal: false\n    });\n  };\n\n  openModal = () => {\n    this.setState({\n      modal: true\n    });\n  };\n\n  randomizeOrder = array => {\n    array.sort(() => Math.random() - 0.5);\n    return array;\n  };\n\n  updateTopScore = currentScore => {\n    currentScore =\n      currentScore >= this.state.topScore\n        ? this.setState(prevState => {\n            return { topScore: prevState.score };\n          })\n        : currentScore;\n  };\n\n  resetScore = () => {\n    this.setState(prevState => ({\n      score: 0,\n      array: prevState.array.map(char =>\n        char.picked === true ? Object.assign(char, { picked: false }) : char\n      )\n    }));\n    this.openModal();\n  };\n\n  compareScore = () => {\n    if (this.state.score > this.state.topScore) {\n      this.setState(prevState => ({\n        topScore: prevState.topScore + 1\n      }));\n    }\n  };\n\n  incrementScore = id => {\n    this.setState(prevState => ({\n      array: prevState.array.map(char =>\n        char.id === id ? Object.assign(char, { picked: true }) : char\n      ),\n      score: prevState.score + 1\n    }));\n\n    if (this.state.array.find(char => (char.id === id ? char.picked : null))) {\n      this.resetScore();\n    }\n\n    this.compareScore();\n  };\n\n  render() {\n    return (\n      <div className=\"App bg-dark\">\n        <header className=\"App-header text-warning pt-4 d-block\">\n          <h1 className=\"text-center\">The Simpsons Game</h1>\n        </header>\n        <section className=\"text-warning text-right pr-5\">\n          <h2>Score: {this.state.score}</h2>\n          <h2>Top Score: {this.state.topScore}</h2>\n        </section>\n        <Container bootstrap=\"text-warning d-flex row justify-content-center mt-3 container mx-auto pb-4\">\n          {this.randomizeOrder(this.state.array).map(character => (\n            <Thumbnail\n              bootstrap=\"pt-4 px-4\"\n              key={character.id}\n              id={character.id}\n              imageSrc={character.hash}\n              alt={character.id}\n              incrementScore={this.incrementScore}\n            />\n          ))}\n          <ModalCom\n            modal={this.state.modal}\n            score={this.state.score}\n            topScore={this.state.topScore}\n            closeModal={this.closeModal}\n          />\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}